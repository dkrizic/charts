apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homebridge.fullname" . }}
  labels:
    {{- include "homebridge.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "homebridge.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "homebridge.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: {{ .Values.homebridge.hostNetwork }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "homebridge.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: homebridge-prepare
          image: busybox
          command: [ 'sh', '-c', 'sed -e "s/LOCAL_IP/$(hostname -i)/g" </original/config.json >/homebridge/config.json; cp /original/package.json /homebridge/' ]
          volumeMounts:
            - name: homebridge-configmap
              mountPath: /original/config.json
              subPath: config.json
            - name: homebridge-configmap
              mountPath: /original/package.json
              subPath: package.json
            - name: homebridge-config
              mountPath: /homebridge
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.homebridge.containerPort }}
              protocol: TCP
            - name: hap
              containerPort: {{ .Values.homebridge.hapPort }}
              protocol: TCP
            {{- if .Values.homebridge.portHttp.enabled }}
            - name: motion
              containerPort: {{ .Values.homebridge.portHttp.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            failureThreshold: 100
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 200
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: homebridge-configmap
            mountPath: /original/config.json
            subPath: config.json
          - name: homebridge-configmap
            mountPath: /original/package.json
            subPath: package.json
          - name: homebridge-config
            mountPath: /homebridge
          env:
            {{- if .Values.homebridge.avahi.enable }}
            - name: ENABLE_AVAHI
              value: "1"
            {{- end }}
            - name: HOMEBRIDGE_CONFIG_UI
              value: "1"
            - name: HOMEBRIDGE_CONFIG_UI_PORT
              value: "{{ .Values.homebridge.containerPort }}"
            - name: HOMEBRIDGE_INSECURE
              value: "1"
            - name: TZ
              value: "{{ .Values.homebridge.timezone }}"
            - name: PACKAGES
              value: ffmpeg
            - name: TERMINATE_ON_ERROR
              value: "1"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: homebridge-configmap
          configMap:
            name: {{ include "homebridge.fullname" . }}
        - name: homebridge-config
          persistentVolumeClaim:
            claimName: {{ include "homebridge.fullname" . }}

